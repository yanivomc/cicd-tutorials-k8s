apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: build-spring-docker-image-from-git-source
spec:
  inputs:
    resources:
      - name: docker-source
        type: git
    params:
      - name: pathToDockerFile
        type: string
        description: The path to the dockerfile to build
        default: /workspace/docker-source/Dockerfile
      - name: pathToContext
        type: string
        description:
          The build context used by Kaniko
          (https://github.com/GoogleContainerTools/kaniko#kaniko-build-contexts)
        default: /workspace/docker-source
  outputs:
    resources:
      - name: builtImage
        type: image
  steps:
    - name: build-jar-spring-music
      #image: gcr.io/kaniko-project/executor:v0.9.0
      # specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential
      image:  java:openjdk-8 # Using JDK for Gradle build
      command: ["/bin/sh","-c"]
      args: 
        - echo starting;
          cd $(inputs.params.pathToContext);
          ./gradlew clean assemble;
          ls -ltrh $(inputs.params.pathToContext)/build/libs/docker-source-1.0.jar;
          echo Copying artifact to Artifact folder;
          cp $(inputs.params.pathToContext)/build/libs/docker-source-1.0.jar /artifacts/;
          ls -ltrh /artifacts/;
          echo done;
      volumeMounts:
        - name: shared-workdir
          mountPath: /artifacts      
    - name: test-jar-spring
      #image: gcr.io/kaniko-project/executor:v0.9.0
      # specifying DOCKER_CONFIG is required to allow kaniko to detect docker credential
      image:  java:openjdk-8-jre-alpine # using JRE for running the spring app
      command: ["/bin/sh","-c"]
      args: 
        - echo starting;
          echo starting some tests on artifact;
          echo validating file exists;
          ls -ltrh $(inputs.params.pathToContext)/build/libs/docker-source-1.0.jar;
          echo done;
      volumeMounts:
        - name: shared-workdir
          mountPath: /artifacts
      
  volumes: # Using Volumes for sharing files across steps
    - name: shared-workdir
      emptyDir: {}

        
